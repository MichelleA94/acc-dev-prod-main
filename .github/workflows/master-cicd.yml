# This is a basic workflow to help you get started with Actions

name: CI/CD-simple

env:
  REGISTRY_NAME: totipuacr
  CLUSTER_NAME: TotipuKube
  CLUSTER_RESOURCE_GROUP: rgTotipuContainer
  NAMESPACE: default
  APP_NAME: hello-cicd

# Controls when the workflow will run
on:
#   # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get dependencies
        working-directory: ./app
        run: npm install

      - name: Build the code
        working-directory: ./app
        run: npm run build --if-present

      - name: Run tests
        working-directory: ./app
        run: npm test
      
      # Connect to Azure Container Registry (ACR)
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.REGISTRY_USERNAME }}
          # Container registry password
          password: ${{ secrets.REGISTRY_PASSWORD }}
          # Container registry server url
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
      
      - name: Build and Push an Image to ACR
        # working-directory: ./hacksoft
        run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
      
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1
        with:
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          namespace: ${{ env.NAMESPACE }}
          # Path to the manifest files which will be used for deployment.
          manifests: |
            k8s/debug-demo-azure.yaml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
