apiVersion: apps/v1
kind: Deployment
metadata:
  name: <DEPLOYMENT-NAME> # name of your deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      <KEY>: <VALUE> # your pod label, e.g. app: isv-hello
  template:
    metadata:
      labels:
        <KEY>: <VALUE> # your pod label, e.g. app: isv-hello
    spec:
      containers: 
      - name: <POD-PREFIX-NAME> # prefix name for your pods
        image: <YOUR-ACR>/<REPOSITORY>:<TAG> # your image name, eg. totipuarc.azurecr.io/isv-hello:1.0
        env:
        - name: AZSVC
          value: "Azure Kubernetes Service"
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: <YOUR-SERVICE-NAME> # name of your service in K8s, e.g. isv-hello-svc
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    <KEY>: <VALUE> # your pod label, e.g. app: isv-hello
# Uncomment this section for Ingress implementation exercise
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: <YOUR-INGRESS-NAME> # name of the ingress resource in k8s, e.g. isv-hello-ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   rules:
#   - host: <YOUR-HOSTNAME> # your hostname, can be ommited if no hostname, e.g. isvacademy.tipuric.com
#     http:
#       paths:
#       - backend:
#           serviceName: <YOUR-SERVICE-NAME> # name of your service in K8s, e.g. isv-hello-svc
#           servicePort: 80
#         path: /
